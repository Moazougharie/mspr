package routines;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

import javax.imageio.ImageIO;

public class FirstRoutine {

    public static byte[] resizeImage(byte[] originalImage) {
        try {
            ByteArrayInputStream bis = new ByteArrayInputStream(originalImage);
            BufferedImage bufferedImage = ImageIO.read(bis);

            Image resizedImage = bufferedImage.getScaledInstance(800, 600, Image.SCALE_DEFAULT);
            BufferedImage newImage = new BufferedImage(800, 600, BufferedImage.TYPE_INT_ARGB);

            newImage.getGraphics().drawImage(resizedImage, 0, 0, null);

            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ImageIO.write(newImage, "png", bos);

            return bos.toByteArray();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static byte[] ByteArrayFromFile(String filepath) {
        try {
            java.io.File file = new java.io.File(filepath);
            java.io.FileInputStream fis = new java.io.FileInputStream(file);
            int fileLength = (int) file.length();
            byte[] incoming_file_data = new byte[fileLength]; 
            fis.read(incoming_file_data, 0, fileLength); 
            fis.close();

            byte[] resizedImage = resizeImage(incoming_file_data);

            return resizedImage;
        } catch (Exception err) {
            err.printStackTrace();
            return null;
        }
    }
}
